services:
  web-app:
    build:
      context: .
    container_name: web-app
    env_file:
      - path: .env
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=${DB_PORT}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - postgres
      - redis
    expose:
      - "8000"
    volumes:
      - ./src:/src

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80" 
      - "443:443"
    depends_on:
      - web-app
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf 
      - /etc/letsencrypt/live/shumeiko.h8st.ru/fullchain.pem:/etc/nginx/ssl/fullchain.pem
      - /etc/letsencrypt/live/shumeiko.h8st.ru/privkey.pem:/etc/nginx/ssl/privkey.pem

  postgres:
    image: postgres:13-alpine
    container_name: postgres
    env_file:
      - path: ./dev.env
        required: true
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - pg_data_booking:/var/lib/postgresql/data
    expose:
      - "5432"
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    env_file:
      - path: ./dev.env
        required: true
    expose:
      - "6379"
    restart: unless-stopped

volumes:
  pg_data_booking:
    driver: local
