services:
  web-app:
    build:
      context: .
      dockerfile: Dockerfile.test
    container_name: web-app
    env_file:
      - path: ./test.env
        required: true
    #environment:
    #  - DB_HOST=${DB_HOST}
    #  - DB_NAME=${DB_NAME}
    #  - DB_USER=${DB_USER}
    #  - DB_PASS=${DB_PASS}
    #  - DB_PORT=${DB_PORT}
    #  - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    #  - JWT_ALGORITHM=${JWT_ALGORITHM}
    #  - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
    #  - REDIS_HOST=${REDIS_HOST}
    #  - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./tests:/tests
      - ./requirements.txt:/src/requirements.txt
    command: /bin/sh -c "while sleep 1000; do :; done"

  postgres:
    image: postgres:13-alpine
    container_name: postgres
    env_file:
      - path: ./test.env
        required: true
    #environment:
    #  POSTGRES_DB: ${DB_NAME}
    #  POSTGRES_USER: ${DB_USER}
    #  POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - pg_data_booking:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    env_file:
      - path: ./test.env
        required: true
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  pg_data_booking:
    driver: local
